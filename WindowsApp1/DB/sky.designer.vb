'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="SkyWater")>  _
Partial Public Class sky
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertHH_baseline(instance As HH_baseline)
    End Sub
  Partial Private Sub UpdateHH_baseline(instance As HH_baseline)
    End Sub
  Partial Private Sub DeleteHH_baseline(instance As HH_baseline)
    End Sub
  Partial Private Sub InsertIND_Followup(instance As IND_Followup)
    End Sub
  Partial Private Sub UpdateIND_Followup(instance As IND_Followup)
    End Sub
  Partial Private Sub DeleteIND_Followup(instance As IND_Followup)
    End Sub
  Partial Private Sub InsertIND_Baseline(instance As IND_Baseline)
    End Sub
  Partial Private Sub UpdateIND_Baseline(instance As IND_Baseline)
    End Sub
  Partial Private Sub DeleteIND_Baseline(instance As IND_Baseline)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.SkyWater.My.MySettings.Default.SkyWaterConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property HH_baselines() As System.Data.Linq.Table(Of HH_baseline)
		Get
			Return Me.GetTable(Of HH_baseline)
		End Get
	End Property
	
	Public ReadOnly Property IND_Followups() As System.Data.Linq.Table(Of IND_Followup)
		Get
			Return Me.GetTable(Of IND_Followup)
		End Get
	End Property
	
	Public ReadOnly Property IND_Baselines() As System.Data.Linq.Table(Of IND_Baseline)
		Get
			Return Me.GetTable(Of IND_Baseline)
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="settings.manageUsers")>  _
	Public Function manageUsers(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal userID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal groupID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal fname As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal onames As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(2)")> ByVal code As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal username As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal password As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal logged As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="NVarChar(100)")> ByVal email As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="date", DbType:="DateTime")> ByVal [date] As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(3)")> ByVal status As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(15)")> ByVal officer As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal type As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), userID, groupID, fname, onames, code, username, password, logged, email, [date], status, officer, type)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.HHBaseline")>  _
	Public Function HHBaseline(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="VID", DbType:="Int")> ByVal vID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HHID", DbType:="VarChar(100)")> ByVal hHID As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HHeadName", DbType:="VarChar(100)")> ByVal hHeadName As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="VisitNo", DbType:="VarChar(100)")> ByVal visitNo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="School_child", DbType:="Int")> ByVal school_child As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal sleeprooms As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal rec_date As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Officer", DbType:="VarChar(100)")> ByVal officer As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal type As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), vID, hHID, hHeadName, visitNo, school_child, sleeprooms, rec_date, officer, type)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.HHFollowup")>  _
	Public Function HHFollowup( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="VID", DbType:="Int")> ByVal vID As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HHID", DbType:="VarChar(100)")> ByVal hHID As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal obtain_last As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal obtain_pipedhse As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal obtain_pipedcmpd As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal obtain_publictap As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal obtain_shofco As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal obtain_nonshofco As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal obtain_privatewell As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal obtain_bottleh2o As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal obtain_bagh2o As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal obtain_vendorh2o As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal obtain_munictap As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal obtain_unknownh2o As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal obtain_otherh2o As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal shofco_kiosk As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal cont_see As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal cont_observe As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal cont_type As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal cont_covered As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal d_pour As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal d_scoopcup As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal d_scoopladle As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal d_empty As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal store_dur As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal h2o_treat As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal method_treat As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal treat_otherchem As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal treat_othermthd As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal treat_materialobserved As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal cl_aqua As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Cl_certeza", DbType:="VarChar(100)")> ByVal cl_certeza As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Cl_na", DbType:="VarChar(100)")> ByVal cl_na As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Cl_waterguard", DbType:="VarChar(100)")> ByVal cl_waterguard As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Cl_watermaker", DbType:="VarChar(100)")> ByVal cl_watermaker As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Cl_unk", DbType:="VarChar(100)")> ByVal cl_unk As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Cl_other", DbType:="VarChar(100)")> ByVal cl_other As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Cl_PG", DbType:="VarChar(100)")> ByVal cl_PG As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal cl_test As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal taste_notice As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal bad_taste As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal prevent_collection As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal p_handwash As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal p_pipewater As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="P_nopipe_notap", DbType:="VarChar(100)")> ByVal p_nopipe_notap As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal p_nopipe_tap As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal p_basin As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal p_soap As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal p_amc As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal main_defeac As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal defeac_other As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal toilet_type As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal toilet_othertype As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal slab_material As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal door As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal use_cost As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal use_timeunit As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal sharing As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal toilet_emptied As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal toilet_full As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal child_defeac As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal feac_dispose As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal feac_disposeOther As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal feac_observed As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal feac_elsewhere As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal comments As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(100)")> ByVal rec_date As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Officer", DbType:="VarChar(100)")> ByVal officer As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal type As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), vID, hHID, obtain_last, obtain_pipedhse, obtain_pipedcmpd, obtain_publictap, obtain_shofco, obtain_nonshofco, obtain_privatewell, obtain_bottleh2o, obtain_bagh2o, obtain_vendorh2o, obtain_munictap, obtain_unknownh2o, obtain_otherh2o, shofco_kiosk, cont_see, cont_observe, cont_type, cont_covered, d_pour, d_scoopcup, d_scoopladle, d_empty, store_dur, h2o_treat, method_treat, treat_otherchem, treat_othermthd, treat_materialobserved, cl_aqua, cl_certeza, cl_na, cl_waterguard, cl_watermaker, cl_unk, cl_other, cl_PG, cl_test, taste_notice, bad_taste, prevent_collection, p_handwash, p_pipewater, p_nopipe_notap, p_nopipe_tap, p_basin, p_soap, p_amc, main_defeac, defeac_other, toilet_type, toilet_othertype, slab_material, door, use_cost, use_timeunit, sharing, toilet_emptied, toilet_full, child_defeac, feac_dispose, feac_disposeOther, feac_observed, feac_elsewhere, comments, rec_date, officer, type)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.manage_indBaseline")>  _
	Public Function manage_indBaseline(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="VID", DbType:="Int")> ByVal vID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HHID", DbType:="VarChar(100)")> ByVal hHID As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DSS_ID", DbType:="VarChar(100)")> ByVal dSS_ID As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Full_Names", DbType:="VarChar(100)")> ByVal full_Names As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DOB", DbType:="VarChar(100)")> ByVal dOB As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Sex", DbType:="VarChar(100)")> ByVal sex As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="RelHH", DbType:="VarChar(100)")> ByVal relHH As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Education", DbType:="VarChar(100)")> ByVal education As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Occupation", DbType:="VarChar(100)")> ByVal occupation As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Breastfeeding", DbType:="VarChar(100)")> ByVal breastfeeding As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="VisitCode", DbType:="VarChar(100)")> ByVal visitCode As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Officer", DbType:="VarChar(100)")> ByVal officer As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal type As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), vID, hHID, dSS_ID, full_Names, dOB, sex, relHH, education, occupation, breastfeeding, visitCode, officer, type)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.manage_indFollowUp")>  _
	Public Function manage_indFollowUp(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="VID", DbType:="Int")> ByVal vID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DSS_ID", DbType:="VarChar(100)")> ByVal dSS_ID As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HHID", DbType:="VarChar(100)")> ByVal hHID As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Names", DbType:="VarChar(100)")> ByVal names As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Sick", DbType:="VarChar(100)")> ByVal sick As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Sick_Dur", DbType:="VarChar(100)")> ByVal sick_Dur As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="LooseStool", DbType:="VarChar(100)")> ByVal looseStool As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="SeekTreatment", DbType:="VarChar(200)")> ByVal seekTreatment As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TreatmentPlace", DbType:="VarChar(100)")> ByVal treatmentPlace As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TreatmentSought", DbType:="VarChar(100)")> ByVal treatmentSought As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="OtherSymptoms", DbType:="VarChar(100)")> ByVal otherSymptoms As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Complaints", DbType:="VarChar(200)")> ByVal complaints As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Officer", DbType:="VarChar(100)")> ByVal officer As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="TinyInt")> ByVal type As System.Nullable(Of Byte)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), vID, dSS_ID, hHID, names, sick, sick_Dur, looseStool, seekTreatment, treatmentPlace, treatmentSought, otherSymptoms, complaints, officer, type)
		Return CType(result.ReturnValue,Integer)
	End Function
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HH_baseline")>  _
Partial Public Class HH_baseline
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _VID As System.Nullable(Of Integer)
	
	Private _HHID As String
	
	Private _HHeadName As String
	
	Private _VisitNo As String
	
	Private _School_child As System.Nullable(Of Integer)
	
	Private _sleeprooms As System.Nullable(Of Integer)
	
	Private _rec_date As System.Nullable(Of Date)
	
	Private _Officer As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnVIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnVIDChanged()
    End Sub
    Partial Private Sub OnHHIDChanging(value As String)
    End Sub
    Partial Private Sub OnHHIDChanged()
    End Sub
    Partial Private Sub OnHHeadNameChanging(value As String)
    End Sub
    Partial Private Sub OnHHeadNameChanged()
    End Sub
    Partial Private Sub OnVisitNoChanging(value As String)
    End Sub
    Partial Private Sub OnVisitNoChanged()
    End Sub
    Partial Private Sub OnSchool_childChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSchool_childChanged()
    End Sub
    Partial Private Sub OnsleeproomsChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnsleeproomsChanged()
    End Sub
    Partial Private Sub Onrec_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onrec_dateChanged()
    End Sub
    Partial Private Sub OnOfficerChanging(value As String)
    End Sub
    Partial Private Sub OnOfficerChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VID", DbType:="Int")>  _
	Public Property VID() As System.Nullable(Of Integer)
		Get
			Return Me._VID
		End Get
		Set
			If (Me._VID.Equals(value) = false) Then
				Me.OnVIDChanging(value)
				Me.SendPropertyChanging
				Me._VID = value
				Me.SendPropertyChanged("VID")
				Me.OnVIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HHID", DbType:="VarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property HHID() As String
		Get
			Return Me._HHID
		End Get
		Set
			If (String.Equals(Me._HHID, value) = false) Then
				Me.OnHHIDChanging(value)
				Me.SendPropertyChanging
				Me._HHID = value
				Me.SendPropertyChanged("HHID")
				Me.OnHHIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HHeadName", DbType:="VarChar(70)")>  _
	Public Property HHeadName() As String
		Get
			Return Me._HHeadName
		End Get
		Set
			If (String.Equals(Me._HHeadName, value) = false) Then
				Me.OnHHeadNameChanging(value)
				Me.SendPropertyChanging
				Me._HHeadName = value
				Me.SendPropertyChanged("HHeadName")
				Me.OnHHeadNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VisitNo", DbType:="VarChar(20)")>  _
	Public Property VisitNo() As String
		Get
			Return Me._VisitNo
		End Get
		Set
			If (String.Equals(Me._VisitNo, value) = false) Then
				Me.OnVisitNoChanging(value)
				Me.SendPropertyChanging
				Me._VisitNo = value
				Me.SendPropertyChanged("VisitNo")
				Me.OnVisitNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_School_child", DbType:="Int")>  _
	Public Property School_child() As System.Nullable(Of Integer)
		Get
			Return Me._School_child
		End Get
		Set
			If (Me._School_child.Equals(value) = false) Then
				Me.OnSchool_childChanging(value)
				Me.SendPropertyChanging
				Me._School_child = value
				Me.SendPropertyChanged("School_child")
				Me.OnSchool_childChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sleeprooms", DbType:="Int")>  _
	Public Property sleeprooms() As System.Nullable(Of Integer)
		Get
			Return Me._sleeprooms
		End Get
		Set
			If (Me._sleeprooms.Equals(value) = false) Then
				Me.OnsleeproomsChanging(value)
				Me.SendPropertyChanging
				Me._sleeprooms = value
				Me.SendPropertyChanged("sleeprooms")
				Me.OnsleeproomsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rec_date", DbType:="Date")>  _
	Public Property rec_date() As System.Nullable(Of Date)
		Get
			Return Me._rec_date
		End Get
		Set
			If (Me._rec_date.Equals(value) = false) Then
				Me.Onrec_dateChanging(value)
				Me.SendPropertyChanging
				Me._rec_date = value
				Me.SendPropertyChanged("rec_date")
				Me.Onrec_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Officer", DbType:="VarChar(20)")>  _
	Public Property Officer() As String
		Get
			Return Me._Officer
		End Get
		Set
			If (String.Equals(Me._Officer, value) = false) Then
				Me.OnOfficerChanging(value)
				Me.SendPropertyChanging
				Me._Officer = value
				Me.SendPropertyChanged("Officer")
				Me.OnOfficerChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.IND_Followup")>  _
Partial Public Class IND_Followup
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _VID As Integer
	
	Private _DSS_ID As String
	
	Private _HHID As String
	
	Private _Names As String
	
	Private _Sick As String
	
	Private _Sick_Dur As System.Nullable(Of Integer)
	
	Private _LooseStool As String
	
	Private _OtherSymptoms As String
	
	Private _TreatmentPlace As String
	
	Private _Treatmentgiven As String
	
	Private _Refered As String
	
	Private _Comments As String
	
	Private _Officer As String
	
	Private _Rec_date As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnVIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnVIDChanged()
    End Sub
    Partial Private Sub OnDSS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnDSS_IDChanged()
    End Sub
    Partial Private Sub OnHHIDChanging(value As String)
    End Sub
    Partial Private Sub OnHHIDChanged()
    End Sub
    Partial Private Sub OnNamesChanging(value As String)
    End Sub
    Partial Private Sub OnNamesChanged()
    End Sub
    Partial Private Sub OnSickChanging(value As String)
    End Sub
    Partial Private Sub OnSickChanged()
    End Sub
    Partial Private Sub OnSick_DurChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSick_DurChanged()
    End Sub
    Partial Private Sub OnLooseStoolChanging(value As String)
    End Sub
    Partial Private Sub OnLooseStoolChanged()
    End Sub
    Partial Private Sub OnOtherSymptomsChanging(value As String)
    End Sub
    Partial Private Sub OnOtherSymptomsChanged()
    End Sub
    Partial Private Sub OnTreatmentPlaceChanging(value As String)
    End Sub
    Partial Private Sub OnTreatmentPlaceChanged()
    End Sub
    Partial Private Sub OnTreatmentgivenChanging(value As String)
    End Sub
    Partial Private Sub OnTreatmentgivenChanged()
    End Sub
    Partial Private Sub OnReferedChanging(value As String)
    End Sub
    Partial Private Sub OnReferedChanged()
    End Sub
    Partial Private Sub OnCommentsChanging(value As String)
    End Sub
    Partial Private Sub OnCommentsChanged()
    End Sub
    Partial Private Sub OnOfficerChanging(value As String)
    End Sub
    Partial Private Sub OnOfficerChanged()
    End Sub
    Partial Private Sub OnRec_dateChanging(value As String)
    End Sub
    Partial Private Sub OnRec_dateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property VID() As Integer
		Get
			Return Me._VID
		End Get
		Set
			If ((Me._VID = value)  _
						= false) Then
				Me.OnVIDChanging(value)
				Me.SendPropertyChanging
				Me._VID = value
				Me.SendPropertyChanged("VID")
				Me.OnVIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DSS_ID", DbType:="VarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property DSS_ID() As String
		Get
			Return Me._DSS_ID
		End Get
		Set
			If (String.Equals(Me._DSS_ID, value) = false) Then
				Me.OnDSS_IDChanging(value)
				Me.SendPropertyChanging
				Me._DSS_ID = value
				Me.SendPropertyChanged("DSS_ID")
				Me.OnDSS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HHID", DbType:="VarChar(20)")>  _
	Public Property HHID() As String
		Get
			Return Me._HHID
		End Get
		Set
			If (String.Equals(Me._HHID, value) = false) Then
				Me.OnHHIDChanging(value)
				Me.SendPropertyChanging
				Me._HHID = value
				Me.SendPropertyChanged("HHID")
				Me.OnHHIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Names", DbType:="VarChar(20)")>  _
	Public Property Names() As String
		Get
			Return Me._Names
		End Get
		Set
			If (String.Equals(Me._Names, value) = false) Then
				Me.OnNamesChanging(value)
				Me.SendPropertyChanging
				Me._Names = value
				Me.SendPropertyChanged("Names")
				Me.OnNamesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sick", DbType:="VarChar(20)")>  _
	Public Property Sick() As String
		Get
			Return Me._Sick
		End Get
		Set
			If (String.Equals(Me._Sick, value) = false) Then
				Me.OnSickChanging(value)
				Me.SendPropertyChanging
				Me._Sick = value
				Me.SendPropertyChanged("Sick")
				Me.OnSickChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sick_Dur", DbType:="Int")>  _
	Public Property Sick_Dur() As System.Nullable(Of Integer)
		Get
			Return Me._Sick_Dur
		End Get
		Set
			If (Me._Sick_Dur.Equals(value) = false) Then
				Me.OnSick_DurChanging(value)
				Me.SendPropertyChanging
				Me._Sick_Dur = value
				Me.SendPropertyChanged("Sick_Dur")
				Me.OnSick_DurChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LooseStool", DbType:="VarChar(20)")>  _
	Public Property LooseStool() As String
		Get
			Return Me._LooseStool
		End Get
		Set
			If (String.Equals(Me._LooseStool, value) = false) Then
				Me.OnLooseStoolChanging(value)
				Me.SendPropertyChanging
				Me._LooseStool = value
				Me.SendPropertyChanged("LooseStool")
				Me.OnLooseStoolChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OtherSymptoms", DbType:="VarChar(200)")>  _
	Public Property OtherSymptoms() As String
		Get
			Return Me._OtherSymptoms
		End Get
		Set
			If (String.Equals(Me._OtherSymptoms, value) = false) Then
				Me.OnOtherSymptomsChanging(value)
				Me.SendPropertyChanging
				Me._OtherSymptoms = value
				Me.SendPropertyChanged("OtherSymptoms")
				Me.OnOtherSymptomsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TreatmentPlace", DbType:="VarChar(100)")>  _
	Public Property TreatmentPlace() As String
		Get
			Return Me._TreatmentPlace
		End Get
		Set
			If (String.Equals(Me._TreatmentPlace, value) = false) Then
				Me.OnTreatmentPlaceChanging(value)
				Me.SendPropertyChanging
				Me._TreatmentPlace = value
				Me.SendPropertyChanged("TreatmentPlace")
				Me.OnTreatmentPlaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Treatmentgiven", DbType:="VarChar(200)")>  _
	Public Property Treatmentgiven() As String
		Get
			Return Me._Treatmentgiven
		End Get
		Set
			If (String.Equals(Me._Treatmentgiven, value) = false) Then
				Me.OnTreatmentgivenChanging(value)
				Me.SendPropertyChanging
				Me._Treatmentgiven = value
				Me.SendPropertyChanged("Treatmentgiven")
				Me.OnTreatmentgivenChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Refered", DbType:="VarChar(20)")>  _
	Public Property Refered() As String
		Get
			Return Me._Refered
		End Get
		Set
			If (String.Equals(Me._Refered, value) = false) Then
				Me.OnReferedChanging(value)
				Me.SendPropertyChanging
				Me._Refered = value
				Me.SendPropertyChanged("Refered")
				Me.OnReferedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Comments", DbType:="VarChar(200)")>  _
	Public Property Comments() As String
		Get
			Return Me._Comments
		End Get
		Set
			If (String.Equals(Me._Comments, value) = false) Then
				Me.OnCommentsChanging(value)
				Me.SendPropertyChanging
				Me._Comments = value
				Me.SendPropertyChanged("Comments")
				Me.OnCommentsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Officer", DbType:="NChar(10)")>  _
	Public Property Officer() As String
		Get
			Return Me._Officer
		End Get
		Set
			If (String.Equals(Me._Officer, value) = false) Then
				Me.OnOfficerChanging(value)
				Me.SendPropertyChanging
				Me._Officer = value
				Me.SendPropertyChanged("Officer")
				Me.OnOfficerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Rec_date", DbType:="NChar(10)")>  _
	Public Property Rec_date() As String
		Get
			Return Me._Rec_date
		End Get
		Set
			If (String.Equals(Me._Rec_date, value) = false) Then
				Me.OnRec_dateChanging(value)
				Me.SendPropertyChanging
				Me._Rec_date = value
				Me.SendPropertyChanged("Rec_date")
				Me.OnRec_dateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.IND_Baseline")>  _
Partial Public Class IND_Baseline
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _VID As System.Nullable(Of Integer)
	
	Private _DSS_ID As String
	
	Private _Full_Names As String
	
	Private _DOB As Date
	
	Private _Sex As String
	
	Private _RelHH As String
	
	Private _Education As String
	
	Private _Occupation As String
	
	Private _Breastfeeding As String
	
	Private _VisitCode As System.Nullable(Of Integer)
	
	Private _Officer As String
	
	Private _rec_date As Date
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnVIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnVIDChanged()
    End Sub
    Partial Private Sub OnDSS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnDSS_IDChanged()
    End Sub
    Partial Private Sub OnFull_NamesChanging(value As String)
    End Sub
    Partial Private Sub OnFull_NamesChanged()
    End Sub
    Partial Private Sub OnDOBChanging(value As Date)
    End Sub
    Partial Private Sub OnDOBChanged()
    End Sub
    Partial Private Sub OnSexChanging(value As String)
    End Sub
    Partial Private Sub OnSexChanged()
    End Sub
    Partial Private Sub OnRelHHChanging(value As String)
    End Sub
    Partial Private Sub OnRelHHChanged()
    End Sub
    Partial Private Sub OnEducationChanging(value As String)
    End Sub
    Partial Private Sub OnEducationChanged()
    End Sub
    Partial Private Sub OnOccupationChanging(value As String)
    End Sub
    Partial Private Sub OnOccupationChanged()
    End Sub
    Partial Private Sub OnBreastfeedingChanging(value As String)
    End Sub
    Partial Private Sub OnBreastfeedingChanged()
    End Sub
    Partial Private Sub OnVisitCodeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnVisitCodeChanged()
    End Sub
    Partial Private Sub OnOfficerChanging(value As String)
    End Sub
    Partial Private Sub OnOfficerChanged()
    End Sub
    Partial Private Sub Onrec_dateChanging(value As Date)
    End Sub
    Partial Private Sub Onrec_dateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VID", DbType:="Int")>  _
	Public Property VID() As System.Nullable(Of Integer)
		Get
			Return Me._VID
		End Get
		Set
			If (Me._VID.Equals(value) = false) Then
				Me.OnVIDChanging(value)
				Me.SendPropertyChanging
				Me._VID = value
				Me.SendPropertyChanged("VID")
				Me.OnVIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DSS_ID", DbType:="VarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property DSS_ID() As String
		Get
			Return Me._DSS_ID
		End Get
		Set
			If (String.Equals(Me._DSS_ID, value) = false) Then
				Me.OnDSS_IDChanging(value)
				Me.SendPropertyChanging
				Me._DSS_ID = value
				Me.SendPropertyChanged("DSS_ID")
				Me.OnDSS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Full_Names", DbType:="VarChar(70) NOT NULL", CanBeNull:=false)>  _
	Public Property Full_Names() As String
		Get
			Return Me._Full_Names
		End Get
		Set
			If (String.Equals(Me._Full_Names, value) = false) Then
				Me.OnFull_NamesChanging(value)
				Me.SendPropertyChanging
				Me._Full_Names = value
				Me.SendPropertyChanged("Full_Names")
				Me.OnFull_NamesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOB", DbType:="Date NOT NULL")>  _
	Public Property DOB() As Date
		Get
			Return Me._DOB
		End Get
		Set
			If ((Me._DOB = value)  _
						= false) Then
				Me.OnDOBChanging(value)
				Me.SendPropertyChanging
				Me._DOB = value
				Me.SendPropertyChanged("DOB")
				Me.OnDOBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sex", DbType:="VarChar(6) NOT NULL", CanBeNull:=false)>  _
	Public Property Sex() As String
		Get
			Return Me._Sex
		End Get
		Set
			If (String.Equals(Me._Sex, value) = false) Then
				Me.OnSexChanging(value)
				Me.SendPropertyChanging
				Me._Sex = value
				Me.SendPropertyChanged("Sex")
				Me.OnSexChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RelHH", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property RelHH() As String
		Get
			Return Me._RelHH
		End Get
		Set
			If (String.Equals(Me._RelHH, value) = false) Then
				Me.OnRelHHChanging(value)
				Me.SendPropertyChanging
				Me._RelHH = value
				Me.SendPropertyChanged("RelHH")
				Me.OnRelHHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Education", DbType:="VarChar(200)")>  _
	Public Property Education() As String
		Get
			Return Me._Education
		End Get
		Set
			If (String.Equals(Me._Education, value) = false) Then
				Me.OnEducationChanging(value)
				Me.SendPropertyChanging
				Me._Education = value
				Me.SendPropertyChanged("Education")
				Me.OnEducationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Occupation", DbType:="VarChar(200)")>  _
	Public Property Occupation() As String
		Get
			Return Me._Occupation
		End Get
		Set
			If (String.Equals(Me._Occupation, value) = false) Then
				Me.OnOccupationChanging(value)
				Me.SendPropertyChanging
				Me._Occupation = value
				Me.SendPropertyChanged("Occupation")
				Me.OnOccupationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Breastfeeding", DbType:="VarChar(10)")>  _
	Public Property Breastfeeding() As String
		Get
			Return Me._Breastfeeding
		End Get
		Set
			If (String.Equals(Me._Breastfeeding, value) = false) Then
				Me.OnBreastfeedingChanging(value)
				Me.SendPropertyChanging
				Me._Breastfeeding = value
				Me.SendPropertyChanged("Breastfeeding")
				Me.OnBreastfeedingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VisitCode", DbType:="Int")>  _
	Public Property VisitCode() As System.Nullable(Of Integer)
		Get
			Return Me._VisitCode
		End Get
		Set
			If (Me._VisitCode.Equals(value) = false) Then
				Me.OnVisitCodeChanging(value)
				Me.SendPropertyChanging
				Me._VisitCode = value
				Me.SendPropertyChanged("VisitCode")
				Me.OnVisitCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Officer", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property Officer() As String
		Get
			Return Me._Officer
		End Get
		Set
			If (String.Equals(Me._Officer, value) = false) Then
				Me.OnOfficerChanging(value)
				Me.SendPropertyChanging
				Me._Officer = value
				Me.SendPropertyChanged("Officer")
				Me.OnOfficerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rec_date", DbType:="Date NOT NULL")>  _
	Public Property rec_date() As Date
		Get
			Return Me._rec_date
		End Get
		Set
			If ((Me._rec_date = value)  _
						= false) Then
				Me.Onrec_dateChanging(value)
				Me.SendPropertyChanging
				Me._rec_date = value
				Me.SendPropertyChanged("rec_date")
				Me.Onrec_dateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
